apiVersion: {{ template "ethereum.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "ethereum.fullname" . }}-geth-node
  labels:
    app: {{ template "ethereum.name" . }}
    chart: {{ template "ethereum.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: geth-node
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "ethereum.name" . }}
      release: {{ .Release.Name }}
      component: geth-node
  template:
    metadata:
      labels:
        app: {{ template "ethereum.name" . }}
        release: {{ .Release.Name }}
        component: geth-node
    spec:
      containers:
      - name: geth-node
        image: {{ .Values.geth.image.repository }}:{{ .Values.geth.image.tag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        command: ["/bin/sh"]
        args: 
        - "-c"
        - "geth --bootnodes="enode://fd566f4b529fca93d31bd7a90383c5c23378483998b20255c90cbaa70732500b7fd246394e5a57b3370c315a8fbe1b97d92e618f49337fcd74e2da44caf0771c@10.42.2.29:30302"` --rpc --rpcaddr 0.0.0.0 --rpcapi admin,personal,eth,net,web3 --ws --networkid=${NETWORK_ID} --ethstats=${HOSTNAME}:${ETHSTATS_SECRET}@${ETHSTATS_SVC} --verbosity=5 "
     ##   - "admin.addPeer("enode://0576ab41cebbdede7ba29df4cd60db8159efb5a144a3736bdc66bb4d4ab2501c277959d53f48a18c924256bc9fc1dbe5fdaa455f264c3afa687c92a1d3c1e0ec@10.42.2.19:30301")"
       ## command: ['sh', '-c', "admin.peers"]
        env:
        - name: ETHSTATS_SVC
          value: {{ template "ethereum.fullname" . }}-ethstats.{{ .Release.Namespace }}
        - name: ETHSTATS_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ template "ethereum.fullname" . }}-ethstats
              key: WS_SECRET
        - name: NETWORK_ID
          valueFrom:
            configMapKeyRef:
              name: {{ template "ethereum.fullname" . }}-geth-config
              key: networkid
        ports:
        - name: rpc
          containerPort: 8545
        - name: ws
          containerPort: 8546
        - name: discovery-udp
          containerPort: 30303
          protocol: UDP
        - name: discovery-tcp
          containerPort: 30303
        volumeMounts:
        - name: data
          mountPath: /root/.ethereum
      initContainers:
      - name: init-genesis
        image: {{ .Values.geth.image.repository }}:{{ .Values.geth.image.tag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        args:
        - "init"
        - "/var/geth/genesis.json"
        volumeMounts:
        - name: data
          mountPath: /root/.ethereum
        - name: config
          mountPath: /var/geth
      - name: import-geth-account
        image: {{ .Values.geth.image.repository }}:{{ .Values.geth.image.tag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        command: ["/bin/sh"]
        args:
        - "-c"
        - "geth account import --password /root/.ethereum/account/accountSecret /root/.ethereum/account/accountPrivateKey"
        volumeMounts:
        - name: data
          mountPath: /root/.ethereum
        - name: account
          readOnly: true
          mountPath: /root/.ethereum/account
      - name: get-bootnodes
        image: {{ .Values.geth.image.repository }}:{{ .Values.geth.image.tag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        command: ["/bin/sh"]
        args:
        - "-c"
        - |-
{{ .Files.Get "scripts/get-bootnode.sh" | indent 10 }}
        env:
        - name: BOOTNODE_SVC
          value: {{ template "ethereum.fullname" . }}-bootnode.{{ .Release.Namespace }}
        volumeMounts:
        - name: data
          mountPath: /geth
      volumes:
      - name: data
        emptyDir: {}
      - name: config 
        configMap:
          name: {{ template "ethereum.fullname" . }}-geth-config
      - name: account
        secret:
          secretName: {{ template "ethereum.fullname" . }}-geth-account
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
